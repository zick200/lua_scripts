--Boot Turtle

os.loadAPI("/moreFile/programs/perip") --
os.loadAPI("/moreFile/programs/config/configProgramT")
os.loadAPI("/moreFile/programs/config/HomeCoord/HomeCoordProgram")
os.loadAPI("/moreFile/programs/requestAPI") --
os.loadAPI("/moreFile/GPS/gps")
os.loadAPI("/moreFile/GPS/refuelLib")



status = true -- cach status from error

local managerID = configProgramT.GET.ManagerID()
local function isModem(  )
	return   perip.inspectThisObject("modem") 
end


local function isBootedTurtle( ... )
  return 	configProgramT.GET.isBooted()
end

local function setHomeCoord( x , y, z , f , C, chest, arrive )
	HomeCoordProgram.SET["xHome"] (x)
	HomeCoordProgram.SET["yHome"] (y)
	HomeCoordProgram.SET["zHome"] (z)
	HomeCoordProgram.SET["fHome"] (f)
	HomeCoordProgram.SET["CoordComplete"] (C)
	HomeCoordProgram.SET["PlacedChests"] (chest)
	HomeCoordProgram.SET["orArrive"](arrive)

end

local function Accepted(  )
            configProgramT.SET.isBooted(true) -- set true if is id equal to this computer 
    
end


local function Denied(  )
      --configProgramT.SET.isBooted(false)
end

local function Status(  ) -- check status
  if not isBootedTurtle(  ) then return false end -- if false or false then 
   return true -- return if not true
end

-- Receiving Data and unserialize or error
--Do while not was first time in Home Coord else Ignore

------Stage-1---Receving-Data------------------------------------------------------------------

if  not Status(  ) then 
  Accepted(  )
		if isModem(  ) then 
		  	        print("Sending first attempt to "..managerID.." Manager.")
		  	   -- Sending signal thart say : Okey, I send one message about me.
		  	        
		  	    
			     
			     while true do -- force to talk, maybe void freeing someting /Looks Promising :D
		            rednet.send(managerID,"firstAttempt:D:D:D")
		         --[Reseive home cordination and save in configFile]
		            print("Waiting Home Coord Data")
		            _,message,_ = rednet.receive(0.8)
		        		 if message ~= nil then break end 
		         end    
		          
	
			     local isContent = message and textutils.unserialize(message)    -- if content 
			     if isContent ~= nil then
			        print "Receive Home cord."
			        --print(message)
			        -- Unserialize cords fron string 
			        print ("Translating message in values.")
			        local Home = textutils.unserialize(message)
			        print ("Compelte")
			        --Set Coord in HomeCord config file
			        print ("Save Coord in: /moreFile/programs/config/HomeCoord/HomeCoordProgram.")
			        setHomeCoord( Home.x ,Home.y, Home.z , Home.f , Home.CoordComplete , Home.PlacedChests, Home.orArrive)--set home coord
			       	--
			       	print("Home.x "..Home.x..".")
			        print("Home.y "..Home.y..".")
			        print("Home.z "..Home.z..".")
			        print("Home.f "..Home.f..".")
			        print("Coord Complete "..tostring (Home.CoordComplete)..".")
			        print("Placed Chests "..tostring(Home.PlacedChests)..".")
			        print ("Is arrived "..tostring(Home.orArrive)) -- firrst time in nest
			        print("-------------------------------------")
			     else 
			     	--print"Camon Manager I need Home coordination..."
        			 status = false 
        			 print("Reason: "..tostring(message))
        end 
		     else 
		  	status =false 
		  	print "No modem found, terminated."  
		  end 
  Denied(  )
end



-- Stage 2---Go-Home--------------------------------------------------------


local chestArray =  {"minecraft:chest", "minecraft:trapped_chest"}

local function isHome(  )
	return HomeCoordProgram.GET.CoordComplete()
end


if isHome(  )  then 
	if not HomeCoordProgram.GET.orArrive() then -- if not arrive in home first time do
		print ("Prepare Moving in Home.")
		--receive data in BOOT file
		--- Get data from config file 
		print ("Geting Home Data from file.")
	    local xHome = HomeCoordProgram.GET.xHome()
		local yHome = HomeCoordProgram.GET.yHome()
		local zHome = HomeCoordProgram.GET.zHome()
		local fHome = HomeCoordProgram.GET.fHome()
		local completeHome = HomeCoordProgram.GET.CoordComplete() -- complete to traveled home first time condition
		local chestHome = HomeCoordProgram.GET.PlacedChests()
		local orArriveFirstTimeHome = HomeCoordProgram.GET.orArrive()
	    print ("Complete")
	    print ("Fuel is low>?.")
	    print ("Faceing:"..tostring(fHome))
		if turtle.getFuelLevel() == 0 then refuelLib.RefuelByValue( 999 ) print "Yes it was." else  print "Nope."  end
		print ("Complete")	
			if not orArriveFirstTimeHome then 
				print "Moving Home First Time."
				gps.Global:setCondition (true)
				gps.Global:goto (xHome , yHome+1 , zHome)-- go up +1
				gps.Global:goto (xHome , yHome , zHome)
				gps.look (fHome) -- fix , Send pure 'SOUTH' , 'WEST' , 'NORTH' , 'EAST'
				print ("Home was Reached.")
				HomeCoordProgram.SET.orArrive(true)-- Was moved in Home first time
				print "Save status about Home was reached."
				print "Complete"
				if not chestHome  then 
				   print "Placing chests."	
					 local a = false;
					 local b = false;
					 if not requestAPI.inspectThis("front", chestArray ) then turtle.dig() a=true; end 
					 if not requestAPI.inspectThis("bottom", chestArray ) then turtle.digDown() b=true end 
					requestAPI.selectThis(chestArray)
					print (turtle.placeDown() and "Place Bottom" or "Chest Bottom :D.")
					requestAPI.selectThis(chestArray)
					print (turtle.place() and "Place Front." or "Chest Front :D.")
					--else drop chest to exsisting one
					print ((not a or not b) and ("Droping Chest"..( a and b and "'s" or "")) or "No Chest To Drop.") 
					requestAPI.giveItemsFrom("bottom",2, chestArray  )
				    HomeCoordProgram.SET.PlacedChests(true) -- Okey bucky you done your job now you can go rest.
				    print((a or b ) and ("Chest"..( a and b and "'s" or "").." was placed first time.") or "Chest Was placed before me :(." )
				    print ("Complete")
	          end  			 	
	   	  end   
	 print "Whoho I was Arived first time in Home."
	 end   	     
else
    print "No home cord.Terminated"	
end

-- Complete Task getting to Home Cord with given data from Super Computer
--End of Aplcication that boot turtles




os.unloadAPI("/moreFile/programs/perip") --
os.unloadAPI("/moreFile/programs/config/configProgramT")
os.unloadAPI("/moreFile/programs/config/HomeCoord/HomeCoordProgram")
os.unloadAPI("/moreFile/programs/requestAPI") --
os.unloadAPI("/moreFile/GPS/gps")
os.unloadAPI("/moreFile/GPS/gps/refuelLib")


print ("Complete 'BOOT'")