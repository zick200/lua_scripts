--print (shell.dir())
os.loadAPI ("OS")
OS.loadAPI("/moreFile/programs/config/source/FileLibrary/fLib","configProgramT")
--Turtle

SET = {
	POST  = function ( line , text )
		assert(line, "Requare initial line")
		assert(text~=nil, "Requare initial text")
	    fLib.replaceLineValue( "/moreFile/programs/config/configT" , line ,text , ":" )
	end;
   
 
	
	isBooted = function (this)
      assert (type(this)=="boolean" , "Requare initial boolean isBooted got:"..tostring(this))
	  SET.POST(1, this)
   end;

  

---- Job ---------------------------------------
   xJob = function (this)
      assert (type(this)=="number" , "Requare initial number xJob got:"..tostring(this))
	  SET.POST(2, this)
   end;
   yJob = function (this)
      assert (type(this)=="number" , "Requare initial number yJob got:"..tostring(this))
	  SET.POST(3, this)
   end;
   zJob = function (this)
      assert (type(this)=="number" , "Requare initial boolean zJob got:"..tostring(this))
	  SET.POST(4, this)
   end;
   fJob = function (this)
      assert (type(this)=="string" , "Requare initial string fJob got:"..tostring(this))
	  SET.POST(5, this)
   end;
   
   JobComplete = function (this)
      assert (type(this)=="boolean" , "Requare initial boolean JobComplete got:"..tostring(this))
	  SET.POST(6, this)
   end;

   xProgress = function (this)
      assert (type(this)=="number" , "Requare initial number xProgress. got:"..tostring(this))
    SET.POST(7, this)
   end;

   yProgress = function (this)
      assert (type(this)=="number" , "Requare initial number yProgress. got:"..tostring(this))
	  SET.POST(8, this)
   end;

  zProgress = function (this)
      assert (type(this)=="number" , "Requare initial number zProgress. got:"..tostring(this))
    SET.POST(9, this)
   end;

   fProgress = function (this)
      assert (type(this)=="string" , "Requare initial string fProgress. got:"..tostring(this))
    SET.POST(10, this)
   end;

   line = function (this)
      assert (type(this)=="number" , "Requare initial number line. got:"..tostring(this))
    SET.POST(11, this)
   end;

    lines = function (this)
      assert (type(this)=="number" , "Requare initial number lines. got:"..tostring(this))
    SET.POST(12, this)
   end;

    JobType = function (this)
      assert (type(this)=="string" , "Requare initial string jobType got "..tostring(this))
    SET.POST(13, this)
   end;
}


GET ={
	 GETPOST = function( line )
	 	assert(type(line)=="number", "Requare initial line")	 	 
	 	return fLib.getLineValue( "/moreFile/programs/config/configT" , line ,":")
	 end; 

	
    isBooted = function ()
	  return  GET.GETPOST(1)
    end;
     
  -------JOB-----------------------------------   
    xJob = function ()
	  return  GET.GETPOST(2)
    end;
    yJob = function ()
	  return  GET.GETPOST(3)
    end;
    zJob = function ()
	  return  GET.GETPOST(4)
    end;
    fJob = function ()
	  return  GET.GETPOST(5)
    end;
     JobComplete = function ()
	  return  GET.GETPOST(6)
    end;
    
    xProgress = function ()
	  return  GET.GETPOST(7)
    end;
     yProgress = function ()
    return  GET.GETPOST(8)
    end;
     zProgress = function ()
    return  GET.GETPOST(9)
    end;
     fProgress = function ()
    return  GET.GETPOST(10)
    end;
    line = function ()
    return  GET.GETPOST(11)
    end;
    lines = function ()
    return  GET.GETPOST(12)
    end;
     JobType = function ()
    return  GET.GETPOST(13)
    end;
}

os.unloadAPI("/moreFile/programs/config/source/FileLibrary/fLib")

--[[
SET.isDisk(false)
SET.xPos(55)
print(GET.xPos())

	print(GET.isDisk())
	print(GET.xPos())
	print(GET.yPos())
	print(GET.zPos())
	print(GET.fPos())
print ( type(GET.isDisk()))

--os.unloadAPI(shell.dir().."/source/FileLibrary/fLib")
]]